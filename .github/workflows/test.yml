name: BuildBot

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    # Note: Deletes contents in $GITHUB_WORKSPACE, so let's put it first
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v1.0.0
      with:
        vs-version: 15.0
    
    # Activate cache
    - name: Start DXSDK Cache
      id:   dxcache
      uses: actions/cache@v1
      with:
       path: DXSDK
       key:  dxsdk-includes
     
    # Download DXSDK if needed, otherwise use cache
    # Only a few include files are necessary
    - name:  Download DXSDK if needed
      if:    steps.dxcache.outputs.cache-hit != 'true'
      run:   |
             curl -L https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -o _DX2010_.exe
             7z x _DX2010_.exe DXSDK/Include/{audiodefs.h,comdecl.h,XAudio2.h,xma2defs.h}
             rm -fR _DX*_ _DX*_.exe
      shell: bash
    
    - name: Build pcsx2
      continue-on-error: true
      run: msbuild "buildbot.xml" /m /v:m /fl1 /fl2 /t:ReleaseAll
      env:
        DXSDK_DIR: ${{ github.workspace }}\DXSDK\

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: Win32-Release
        path: bin
